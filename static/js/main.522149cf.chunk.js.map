{"version":3,"sources":["api/constants.ts","types/lib.ts","api/subscribeToOrderBook.ts","lib/useVisibility.ts","lib/sortByPrice.ts","lib/updateOrder.ts","api/useSubscribeToOrderBook.ts","lib/productIdToName.ts","lib/getTestProps.ts","components/Loader/loader.svg","components/Loader/Loader.tsx","components/OrderBook/Container.tsx","components/OrderBook/Grid.tsx","lib/computeOrderBookTotal.ts","lib/formatNumber.ts","components/OrderBook/Cell.tsx","components/OrderBook/RowCell.tsx","components/OrderBook/Row.tsx","components/OrderBook/GridRows.tsx","components/OrderBook/Header.tsx","components/OrderBook/Title.tsx","components/OrderBook/OrderBook.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["FEED_NAME","XBT_USD","isSnapshotEvent","event","numLevels","feed","endsWith","product_id","Array","isArray","asks","bids","isOrderBookUpdateEvent","subscribeToOrderBook","isHandshakeDone","onData","onError","productIds","ws","WebSocket","addEventListener","handshakeMessage","JSON","stringify","getHandshakeData","send","close","eventData","data","parse","error","dispatchError","getEventData","isSubscribeEvent","isValidSubscribeEvent","Error","product_ids","document","createEvent","initCustomEvent","dispatchEvent","isCorrectFeed","isMatchingProductIds","every","pid","includes","useVisibility","initialState","useState","isVisible","setIsVisible","useEvent","useCallback","hidden","sortByPrice","orders","sort","insertOrder","orderBook","order","insertionIndex","sortedIndex","splice","removeOrder","index","updateOrder","orderPrice","orderSize","orderIndex","findIndex","isNewOrder","shouldUpdateOrder","nextOrderBook","useSubscribeToOrderBook","productId","isLoading","setIsLoading","useRef","update","useUpdate","useRafLoop","useEffect","current","reduce","nextAsks","ask","nextBids","bid","reverse","NAME_MAP","productIdToName","IS_TEST_ENV","Loader","props","src","loader","alt","Container","styled","div","Grid","computeOrderBookTotal","slice","total","formatNumber","value","digits","Intl","NumberFormat","undefined","maximumFractionDigits","minimumFractionDigits","format","Cell","RowCell","isHovered","hoverStyle","css","Row","onMouseOut","onMouseOver","price","size","totalSum","percent","style","GridRows","reversedTotal","hoveredIndex","setHoveredIndex","ordersForTotal","length","map","Text","span","Header","Title","h2","BaseGrid","AsksGrid","BidsGrid","LoaderContainer","BaseLoader","OrderBook","ordersCount","getTestProps","ErrorContainer","RetryButton","button","App","isError","setIsError","handleError","console","onClick","type","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.522149cf.chunk.js","sourcesContent":["export const WS_URL = 'wss://www.cryptofacilities.com/ws/v1';\n\nexport const FEED_NAME = 'book_ui_1';\n\nexport const XBT_USD = 'PI_XBTUSD';\n","import {\n  OrderBookUpdateEvent,\n  OrderBookSnapshotEvent,\n  OrderBookSubscribeEvent,\n} from './OrderBookData';\n\nexport const isSubscribeEvent = (\n  event: any,\n): event is OrderBookSubscribeEvent =>\n  typeof event === 'object' && event.event === 'subscribed';\n\nexport const isSnapshotEvent = (event: any): event is OrderBookSnapshotEvent =>\n  typeof event === 'object' &&\n  typeof event.numLevels === 'number' &&\n  typeof event.feed === 'string' &&\n  event.feed.endsWith('_snapshot') &&\n  typeof event.product_id === 'string' &&\n  Array.isArray(event.asks) &&\n  Array.isArray(event.bids);\n\nexport const isOrderBookUpdateEvent = (\n  event: any,\n): event is OrderBookUpdateEvent =>\n  typeof event === 'object' &&\n  typeof event.product_id === 'string' &&\n  Array.isArray(event.asks) &&\n  Array.isArray(event.bids);\n","import {\n  OrderBookUpdateEvent,\n  OrderBookSnapshotEvent,\n  OrderBookSubscribeEvent,\n} from '../types';\nimport {\n  isOrderBookUpdateEvent,\n  isSnapshotEvent,\n  isSubscribeEvent,\n} from '../types/lib';\nimport { FEED_NAME, WS_URL } from './constants';\n\ntype EventData =\n  | OrderBookSubscribeEvent\n  | OrderBookSnapshotEvent\n  | OrderBookUpdateEvent;\n\ntype Unsubscribe = () => void;\n\ninterface Parameters {\n  onData: (data: OrderBookSnapshotEvent | OrderBookUpdateEvent) => void;\n  onError: (event: Event) => void;\n  productIds: string[];\n}\n\nexport function subscribeToOrderBook({\n  onData,\n  onError,\n  productIds,\n}: Parameters): Unsubscribe {\n  const ws = new WebSocket(WS_URL);\n  let isHandshakeDone: boolean;\n\n  const getEventData = (event: MessageEvent<string>): EventData | undefined => {\n    if (!event.data) {\n      return undefined;\n    }\n\n    try {\n      return JSON.parse(event.data);\n    } catch (error) {\n      dispatchError(ws, error);\n    }\n  };\n\n  ws.addEventListener('open', () => {\n    isHandshakeDone = false;\n    const handshakeMessage = JSON.stringify(getHandshakeData(productIds));\n    ws.send(handshakeMessage);\n  });\n\n  ws.addEventListener('error', (event) => {\n    onError(event);\n    ws.close();\n  });\n\n  ws.addEventListener('message', (event: MessageEvent<string>) => {\n    const eventData = getEventData(event);\n\n    if (!eventData) {\n      return;\n    }\n\n    if (isSubscribeEvent(eventData)) {\n      isHandshakeDone = isValidSubscribeEvent(eventData, productIds);\n      if (!isHandshakeDone) {\n        dispatchError(ws, new Error('OrderBook handshake failed'));\n      }\n    }\n\n    if (\n      isHandshakeDone &&\n      (isSnapshotEvent(eventData) || isOrderBookUpdateEvent(eventData))\n    ) {\n      onData(eventData);\n    }\n  });\n\n  return () => {\n    ws.close();\n  };\n}\n\nconst getHandshakeData = (productIds: string[]) => ({\n  event: 'subscribe',\n  feed: FEED_NAME,\n  product_ids: productIds,\n});\n\nconst dispatchError = (ws: WebSocket, error: Error): void => {\n  const event = document.createEvent('CustomEvent');\n  event.initCustomEvent('error', false, false, error);\n  ws.dispatchEvent(event);\n};\n\nconst isValidSubscribeEvent = (\n  eventData: OrderBookSubscribeEvent,\n  productIds: string[],\n): boolean => {\n  const isCorrectFeed = eventData.feed === FEED_NAME;\n  const isMatchingProductIds = eventData.product_ids.every((pid) =>\n    productIds.includes(pid),\n  );\n\n  return isCorrectFeed && isMatchingProductIds;\n};\n","import { useCallback, useState } from 'react';\nimport { useEvent } from 'react-use';\n\nconst useVisibility = (initialState = true): boolean => {\n  const [isVisible, setIsVisible] = useState<boolean>(initialState);\n\n  useEvent(\n    'visibilitychange',\n    useCallback(() => {\n      setIsVisible(!document.hidden);\n    }, []),\n  );\n\n  return isVisible;\n};\n\nexport default useVisibility;\n","import { Order } from '../types';\n\nconst sortByPrice = (orders: Order[]): Order[] =>\n  orders.sort(([aPrice], [bPrice]) => aPrice - bPrice);\n\nexport default sortByPrice;\n","import sortedIndex from 'lodash.sortedindexby';\n\nimport { Order } from '../types';\n\nconst updateOrder = (orderBook: Order[], order: Order): Order[] => {\n  const [orderPrice, orderSize] = order;\n  const orderIndex = orderBook.findIndex(([price]) => price === orderPrice);\n  const isNewOrder = orderIndex === -1;\n  const shouldUpdateOrder = orderSize > 0;\n\n  if (isNewOrder && !shouldUpdateOrder) {\n    return orderBook;\n  }\n\n  const nextOrderBook = [...orderBook];\n  if (isNewOrder) {\n    return insertOrder(nextOrderBook, order);\n  }\n\n  if (!shouldUpdateOrder) {\n    return removeOrder(nextOrderBook, orderIndex);\n  }\n\n  nextOrderBook[orderIndex] = order;\n\n  return nextOrderBook;\n};\n\nconst insertOrder = (orderBook: Order[], order: Order): Order[] => {\n  const insertionIndex = sortedIndex(orderBook, order, ([price]) => price);\n  orderBook.splice(insertionIndex, 0, order);\n  return orderBook;\n};\n\nconst removeOrder = (orderBook: Order[], index: number): Order[] => {\n  orderBook.splice(index, 1);\n  return orderBook;\n};\n\nexport default updateOrder;\n","import { useEffect, useRef, useState } from 'react';\nimport { useRafLoop, useUpdate } from 'react-use';\nimport sortByPrice from '../lib/sortByPrice';\nimport updateOrder from '../lib/updateOrder';\nimport { Order } from '../types';\nimport { isOrderBookUpdateEvent, isSnapshotEvent } from '../types/lib';\nimport { subscribeToOrderBook } from './subscribeToOrderBook';\n\ninterface Parameters {\n  onError: (event: Event) => void;\n  productId: string;\n}\n\ninterface State {\n  asks: Order[];\n  bids: Order[];\n  isLoading: boolean;\n}\n\nconst useSubscribeToOrderBook = ({ onError, productId }: Parameters): State => {\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const asks = useRef<Order[]>([]);\n  const bids = useRef<Order[]>([]);\n  // PERF: using refs and requestAnimationFrame loop to optimize UI updates.\n  // Before, the UI updates would get slower the longer the app is running.\n  const update = useUpdate();\n  useRafLoop(update);\n\n  useEffect(() => {\n    return subscribeToOrderBook({\n      onData: (data) => {\n        if (isSnapshotEvent(data)) {\n          setIsLoading(false);\n          asks.current = sortByPrice(data.asks);\n          bids.current = sortByPrice(data.bids);\n        }\n        if (isOrderBookUpdateEvent(data)) {\n          asks.current = data.asks.reduce(\n            (nextAsks, ask) => updateOrder(nextAsks, ask),\n            asks.current,\n          );\n          bids.current = data.bids.reduce(\n            (nextBids, bid) => updateOrder(nextBids, bid),\n            bids.current,\n          );\n        }\n      },\n      onError,\n      productIds: [productId],\n    });\n  }, [onError, productId]);\n\n  return {\n    asks: [...asks.current].reverse(),\n    bids: [...bids.current].reverse(),\n    isLoading,\n  };\n};\n\nexport default useSubscribeToOrderBook;\n","import { XBT_USD } from '../api';\n\nconst NAME_MAP: Record<string, string> = {\n  [XBT_USD]: 'XBT/USD',\n};\n\nconst productIdToName = (productId: string): string | undefined =>\n  NAME_MAP[productId];\n\nexport default productIdToName;\n","const IS_TEST_ENV = process.env.NODE_ENV === 'test';\n\nconst noop = () => {};\n\nconst getTestProps = (testId: string): object => ({\n  'data-testid': testId,\n});\n\nexport default IS_TEST_ENV ? getTestProps : noop;\n","export default __webpack_public_path__ + \"static/media/loader.50179ff6.svg\";","import { ImgHTMLAttributes } from 'react';\nimport loader from './loader.svg';\n\ninterface Props extends Omit<ImgHTMLAttributes<HTMLImageElement>, 'src'> {}\n\nconst Loader = (props: Props) => (\n  <img {...props} src={loader} alt=\"Loading...\" />\n);\n\nexport default Loader;\n","import styled from '@emotion/styled';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  font-family: var(--font-mono);\n  font-size: var(--card-font-size);\n  background: var(--card-bg);\n  color: var(--card-color);\n  padding: 16px 0;\n`;\n\nexport default Container;\n","import styled from '@emotion/styled';\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-auto-rows: 20px;\n  column-gap: var(--grid-column-gap);\n  row-gap: 4px;\n  text-align: right;\n`;\n\nexport default Grid;\n","import { Order } from '../types';\n\nconst computeOrderBookTotal = (orderBook: Order[], order?: Order): number => {\n  if (!order) {\n    return 0;\n  }\n\n  const [orderPrice] = order;\n  const orderIndex = orderBook.findIndex((order) => order[0] === orderPrice);\n\n  if (orderIndex === -1) {\n    return 0;\n  }\n\n  return orderBook\n    .slice(0, orderIndex + 1)\n    .reduce((total, [, size]) => total + size, 0);\n};\n\nexport default computeOrderBookTotal;\n","const formatNumber = (value: number, { digits }: { digits: number }): string =>\n  // Using undefined to let the browser decide the locale\n  Intl.NumberFormat(undefined, {\n    maximumFractionDigits: digits,\n    minimumFractionDigits: digits,\n  }).format(value);\n\nexport default formatNumber;\n","import styled from '@emotion/styled';\n\nconst Cell = styled.div`\n  padding: 4px 8px;\n  min-width: 90px;\n`;\n\nexport default Cell;\n","import { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport Cell from './Cell';\n\ninterface Props {\n  isHovered?: boolean;\n}\n\nconst RowCell = styled(Cell)<Props>`\n  position: relative;\n\n  &:hover {\n    font-weight: bold;\n  }\n\n  &:nth-of-type(3n + 1) {\n    --row-full-width: calc(300% + var(--grid-column-gap) * 2);\n    color: var(--text-color);\n\n    ${({ isHovered }) => isHovered && hoverStyle}\n\n    &:before {\n      content: '';\n      position: absolute;\n      left: 0;\n      top: 0;\n      height: 100%;\n      width: var(--row-full-width);\n      background: var(--row-background);\n      transform-origin: 0;\n      transform: scaleX(var(--percent));\n    }\n  }\n`;\n\nconst hoverStyle = css`\n  &:after {\n    content: '';\n    position: absolute;\n    left: 0;\n    top: 0;\n    height: 100%;\n    width: var(--row-full-width);\n    background: rgba(255, 255, 255, 0.1);\n  }\n`;\n\nexport default RowCell;\n","import React, { CSSProperties, MouseEventHandler } from 'react';\nimport formatNumber from '../../lib/formatNumber';\nimport RowCell from './RowCell';\n\ninterface Props {\n  index: number;\n  isHovered: boolean;\n  onMouseOut: MouseEventHandler;\n  onMouseOver: MouseEventHandler;\n  price: number;\n  size: number;\n  total: number;\n  totalSum: number;\n}\n\nconst Row = ({\n  index,\n  isHovered,\n  onMouseOut,\n  onMouseOver,\n  price,\n  size,\n  total,\n  totalSum,\n}: Props) => {\n  const percent = index === 0 ? total / totalSum : (total - size) / totalSum;\n\n  return (\n    <>\n      <RowCell\n        isHovered={isHovered}\n        onMouseOut={onMouseOut}\n        onMouseOver={onMouseOver}\n        // TODO: figure out how to compute the correct percent value\n        style={{ '--percent': percent } as CSSProperties}\n      >\n        {formatNumber(price, { digits: 2 })}\n      </RowCell>\n      <RowCell onMouseOut={onMouseOut} onMouseOver={onMouseOver}>\n        {formatNumber(size, { digits: 0 })}\n      </RowCell>\n      <RowCell onMouseOut={onMouseOut} onMouseOver={onMouseOver}>\n        {formatNumber(total, { digits: 0 })}\n      </RowCell>\n    </>\n  );\n};\n\nexport default Row;\n","import React, { useState } from 'react';\nimport computeOrderBookTotal from '../../lib/computeOrderBookTotal';\nimport { Order } from '../../types';\nimport Row from './Row';\n\ninterface Props {\n  orders: Order[];\n  reversedTotal?: boolean;\n}\n\nconst GridRows = ({ orders, reversedTotal = false }: Props) => {\n  const [hoveredIndex, setHoveredIndex] = useState<number>(-1);\n  const ordersForTotal = reversedTotal ? [...orders].reverse() : orders;\n  const totalSum = computeOrderBookTotal(orders, orders[orders.length - 1]);\n\n  return (\n    <>\n      {orders.map(([price, size], index) => (\n        <Row\n          index={index}\n          isHovered={hoveredIndex === index}\n          key={price}\n          onMouseOut={() => setHoveredIndex(-1)}\n          onMouseOver={() => setHoveredIndex(index)}\n          price={price}\n          size={size}\n          total={computeOrderBookTotal(ordersForTotal, [price, size])}\n          totalSum={totalSum}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default GridRows;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport Cell from './Cell';\n\nconst Header = () => (\n  <>\n    <Cell>\n      <Text>Price</Text>\n    </Cell>\n    <Cell>\n      <Text>Size</Text>\n    </Cell>\n    <Cell>\n      <Text>Total</Text>\n    </Cell>\n  </>\n);\n\nconst Text = styled.span`\n  color: var(--card-title-color);\n  text-transform: uppercase;\n  border-bottom: 1px dotted;\n`;\n\nexport default Header;\n","import styled from '@emotion/styled';\n\nconst Title = styled.h2`\n  text-align: center;\n  margin: 0 0 16px;\n  padding: 0 16px;\n`;\n\nexport default Title;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport useSubscribeToOrderBook from '../../api/useSubscribeToOrderBook';\nimport productIdToName from '../../lib/productIdToName';\nimport getTestProps from '../../lib/getTestProps';\nimport BaseLoader from '../Loader';\nimport Container from './Container';\nimport BaseGrid from './Grid';\nimport GridRows from './GridRows';\nimport Header from './Header';\nimport Title from './Title';\n\ninterface Props {\n  onError: (event: Event) => void;\n  ordersCount?: number;\n  productId: string;\n}\n\nconst OrderBook = ({ onError, ordersCount = 10, productId }: Props) => {\n  const { asks, bids, isLoading } = useSubscribeToOrderBook({\n    onError,\n    productId,\n  });\n\n  return (\n    <Container>\n      <Title>Orderbook ({productIdToName(productId)})</Title>\n      {isLoading && (\n        <LoaderContainer>\n          <Loader />\n        </LoaderContainer>\n      )}\n      {!isLoading && (\n        <>\n          <AsksGrid {...getTestProps('asks-grid')}>\n            <Header />\n            <GridRows orders={asks.slice(0, ordersCount)} reversedTotal />\n          </AsksGrid>\n\n          <BidsGrid {...getTestProps('bids-grid')}>\n            <GridRows orders={bids.slice(0, ordersCount)} />\n          </BidsGrid>\n        </>\n      )}\n    </Container>\n  );\n};\n\nconst Grid = styled(BaseGrid)`\n  --grid-column-gap: 8px;\n`;\n\nconst AsksGrid = styled(Grid)`\n  margin-bottom: 16px;\n  --text-color: var(--asks-color);\n  --row-background: var(--asks-bg);\n`;\n\nconst BidsGrid = styled(Grid)`\n  --text-color: var(--bids-color);\n  --row-background: var(--bids-bg);\n`;\n\nconst LoaderContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Loader = styled(BaseLoader)`\n  width: 50px;\n  height: 50px;\n`;\n\nexport default OrderBook;\n","import styled from '@emotion/styled';\nimport React, { useCallback, useState } from 'react';\nimport { XBT_USD } from './api';\nimport useVisibility from './lib/useVisibility';\nimport { OrderBook } from './components';\n\nconst App = () => {\n  const [isError, setIsError] = useState<boolean>(false);\n  const isVisible = useVisibility();\n\n  const handleError = useCallback((event: Event) => {\n    console.error(event);\n    setIsError(true);\n  }, []);\n\n  return (\n    <Container>\n      {!isError && isVisible && (\n        <OrderBook onError={handleError} productId={XBT_USD} />\n      )}\n      {isError && (\n        <ErrorContainer>\n          <p>An error occurred</p>\n          <div>\n            <RetryButton onClick={() => setIsError(false)} type=\"button\">\n              Retry\n            </RetryButton>\n          </div>\n        </ErrorContainer>\n      )}\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 16px 0;\n`;\n\nconst ErrorContainer = styled.div`\n  text-align: center;\n`;\n\nconst RetryButton = styled.button`\n  cursor: pointer;\n`;\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize';\nimport '@ibm/plex';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}